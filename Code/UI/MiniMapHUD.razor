@using Sandbox;
@using Sandbox.UI;
@inherits PanelComponent
@namespace Sandbox

<root>
	<div class="minimap">
		@* Actual minimap RenderTarget *@
		<Image Texture="@_renderTarget"></Image>
		
		@* @foreach (var arrow in _arrows) *@
		@* { *@
		@* } *@
	</div>
</root>

@code
{
	[Property] public CameraComponent Camera { get; set; } = null;
	private Texture _renderTarget;
	private List<GoalArrows> _arrows;

	public void SetupRenderTarget()
	{
		_renderTarget = Texture.CreateRenderTarget()
			.WithSize(512, 512)
			.WithScreenFormat()
			.Create();
		Camera.RenderTarget = _renderTarget;
		Camera.RenderToTexture(_renderTarget);
	}

	protected override void OnStart()
	{
		_arrows = Scene.GetAllComponents<GoalArrows>().ToList();
		GetComponent<ScreenPanel>().AutoScreenScale = true;
	}
	protected override void OnUpdate()
	{
		if (_renderTarget == null)
		{
			SetupRenderTarget();
		}

		Camera.Enabled = true;
		Camera.Priority = 100;
		Camera.RenderToTexture(_renderTarget);
	}

	/// <summary>
	/// the hash determines if the system should be rebuilt. If it changes, it will be rebuilt
	/// </summary>
	protected override int BuildHash()
	{
		return System.HashCode.Combine( _renderTarget );
	}
}
